{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///home/louis/Documents/instant-demo/Documents/instant-demo/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2LAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qKAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 33, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///home/louis/Documents/instant-demo/Documents/instant-demo/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-xl border bg-card text-card-foreground shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,sOAAM,UAAU,CAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8QAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mJAAA,CAAA,KAAE,AAAD,EACV,yDACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,sOAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8QAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mJAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,sOAAM,UAAU,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8QAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mJAAA,CAAA,KAAE,AAAD,EAAE,6CAA6C;QAC1D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,sOAAM,UAAU,CAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8QAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mJAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,sOAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8QAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mJAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,sOAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8QAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mJAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG"}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":["file:///home/louis/Documents/instant-demo/Documents/instant-demo/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-10 px-2 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\n      \"p-2 align-middle [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n      className\n    )}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,sOAAM,UAAU,CAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8QAAC;QAAI,WAAU;kBACb,cAAA,8QAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,mJAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,sOAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8QAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,mJAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,sOAAM,UAAU,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8QAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mJAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,sOAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8QAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mJAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,sOAAM,UAAU,CAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8QAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mJAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,sOAAM,UAAU,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8QAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mJAAA,CAAA,KAAE,AAAD,EACV,0IACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,sOAAM,UAAU,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8QAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mJAAA,CAAA,KAAE,AAAD,EACV,wFACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,sOAAM,UAAU,CAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8QAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mJAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG"}},
    {"offset": {"line": 224, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 230, "column": 0}, "map": {"version":3,"sources":["file:///home/louis/Documents/instant-demo/Documents/instant-demo/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AAEA;AAEA;AAHA;;;;;;AAKA,MAAM,iBAAiB,CAAA,GAAA,gMAAA,CAAA,MAAG,AAAD,EACvB,ySACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,sOAAM,UAAU,CAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gMAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8QAAC;QACC,WAAW,CAAA,GAAA,mJAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 284, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 290, "column": 0}, "map": {"version":3,"sources":["file:///home/louis/Documents/instant-demo/Documents/instant-demo/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary shadow focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;AAEA;AAIA;AAHA;AACA;AAJA;;;;;;AAQA,MAAM,yBAAW,sOAAM,UAAU,CAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8QAAC,qMAAkB,IAAI;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,mJAAA,CAAA,KAAE,AAAD,EACV,sQACA;QAED,GAAG,KAAK;kBAET,cAAA,8QAAC,qMAAkB,SAAS;YAC1B,WAAW,CAAA,GAAA,mJAAA,CAAA,KAAE,AAAD,EAAE;sBAEd,cAAA,8QAAC,oOAAA,CAAA,QAAK;gBAAC,WAAU;;;;;;;;;;;;;;;;AAIvB,SAAS,WAAW,GAAG,qMAAkB,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 329, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 335, "column": 0}, "map": {"version":3,"sources":["file:///home/louis/Documents/instant-demo/Documents/instant-demo/src/ui-components/table-list.tsx"],"sourcesContent":["import { useState } from \"react\"\n\n// db stuff \nimport { id, init, i, type InstaQLEntity } from \"@instantdb/react\";\n\ntype Finance = InstaQLEntity<typeof schema, \"expenses\">;\n\n// components \nimport { Card, CardContent, CardHeader } from \"@/components/ui/card\"\nimport { Table, TableCell, TableHead, TableHeader, TableRow, TableBody } from \"@/components/ui/table\"\nimport { Button } from \"@/components/ui/button\"\nimport { Checkbox } from \"@/components/ui/checkbox\"\n\n// icons \nimport { Trash2,Edit } from \"lucide-react\"\n\n// schema declaration \nconst schema = i.schema({\n  entities: {\n    expenses: i.entity({\n      trx_amount: i.number(),\n      trx_cost: i.number(),\n      category: i.string(),\n      payment_method: i.string(),\n      paid_on: i.number(),\n    })\n  }\n});\n\nexport default function ExpenseTable({ expenses }: { expenses: Finance[] }) {\n    \n    const [selectedRows, setSelectedRows] = useState<string[]>([])\n    \n      // Toggle selection of a row\n      const toggleRowSelection = (id: string) => {\n        setSelectedRows((prev) => (prev.includes(id) ? prev.filter((rowId) => rowId !== id) : [...prev, id]))\n      }\n    \n      const handleDelete = () => {\n        console.log(\"Deleting rows:\", selectedRows)\n        setSelectedRows([])\n      }\n    \n      // Handle edit action\n      const handleEdit = (id: string) => {\n        // Implement edit functionality here\n        console.log(\"Editing row:\", id)\n      }\n    \n      // function get method styling\n      const getMethodStyle = (payment_method: string) => {\n        switch (payment_method.toLowerCase()) {\n          case \"mpesa\":\n            return \"bg-green-100 text-green-500\"\n          case \"cheque\":\n            return \"bg-blue-950 text-blue-100\"\n          case \"debit\":\n            return \"bg-rose-100 text-rose-500\"\n          case \"cash\":\n            return \"bg-amber-100 text-amber-500\"\n          case \"credit\":\n            return \"bg-purple-100 text-purple-500\"\n          case \"bank_app\":\n            return \"bg-blue-100 text-blue-500\"\n          case \"other\":\n            return \"bg-gray-100 text-gray-500\"\n        }\n      }\n      // Function to get category styling\n      const getCategoryStyle = (category: string) => {\n        switch (category.toLowerCase()) {\n          case \"food\":\n            return \"bg-orange-100 text-orange-500\"\n          case \"housing\":\n            return \"bg-cyan-100 text-cyan-500\"\n          case \"utilities\":\n            return \"bg-yellow-100 text-yellow-500\"\n          case \"transport\":\n            return \"bg-blue-100 text-blue-500\"\n          case \"entertainment\":\n            return \"bg-purple-100 text-purple-500\"\n          case \"healthcare\":\n            return \"bg-green-100 text-green-500\"\n          case \"shopping\":\n            return \"bg-pink-100 text-pink-500\"\n          case \"holiday\":\n            return \"bg-teal-100 text-teal-500\"\n          case \"clothing\":\n            return \"bg-purple-100 text-purple-500\"\n          default:\n            return \"bg-gray-100 text-gray-500\"\n        }\n      }\n    \n      // Format currency\n      const formatCurrency = (amount: number) => {\n        return new Intl.NumberFormat(\"en-US\", {\n          style: \"currency\",\n          currency: \"KSh\"\n        }).format(amount)\n      }\n    \n      // Format date\n      const formatDate = (dateString: string | number) => {\n        return new Date(dateString).toLocaleDateString(\"en-US\", {\n          year: \"numeric\",\n          month: \"short\",\n          day: \"numeric\",\n        })\n      }\n    return (\n        <div className=\"flex items-center justify-between py-3\">\n            <Card className=\"w-full\">\n                <div className=\"flex items-center justify-between\">\n                <CardHeader>\n                    {selectedRows.length > 0 && (\n                    <Button variant=\"destructive\" size=\"sm\" className=\"flex items-center gap-2\" onClick={ handleDelete }>\n                        <Trash2 className=\"h-4 w-4\" />\n                        Delete {selectedRows.length > 1 ? \"rows\" : \"row\"} ({selectedRows.length})\n                    </Button>\n                    )}\n                </CardHeader>\n                </div>\n                <CardContent>\n                    <Table>\n                    <TableHeader>\n                        <TableRow>\n                        <TableHead className=\"font-semibold text-black text-xs border border-gray-200 w-24\">\n                        </TableHead>\n                        <TableHead className=\"font-semibold text-black text-xs border border-gray-200\">Category</TableHead>\n                        <TableHead className=\"font-semibold text-black text-xs border border-gray-200\">Trx Amount</TableHead>\n                        <TableHead className=\"font-semibold text-black text-xs border border-gray-200\">Trx Cost</TableHead>\n                        <TableHead className=\"font-semibold text-black text-xs border border-gray-200\">Method</TableHead>\n                        <TableHead className=\"font-semibold text-black text-xs border border-gray-200\">Date</TableHead>\n                        </TableRow>\n                    </TableHeader>\n                    <TableBody className=\" text-gray-500 text-xs\">\n                        { expenses\n                        .sort((a,b) => new Date(b.paid_on).getTime() - new Date(a.paid_on).getTime())\n                        .map((expense) => (\n                        <TableRow key={expense.id} className=\"group relative\">\n                            <TableCell className=\"border border-gray-200 w-24\">\n                            <div className=\"flex items-center gap-2\">\n                                <Checkbox\n                                checked={selectedRows.includes(expense.id)}\n                                onCheckedChange={() => toggleRowSelection(expense.id)}\n                                aria-label={`Select row ${expense.id}`}\n                                className=\" rounded-none\"\n                                />\n                                <Button\n                                variant=\"ghost\"\n                                size=\"icon\"\n                                className=\"opacity-0 group-hover:opacity-100 transition-opacity h-8 w-8\"\n                                onClick={() => handleEdit(expense.id)}\n                                >\n                                <Edit className=\"h-4 w-4\" />\n                                <span className=\"sr-only\">Edit</span>\n                                </Button>\n                            </div>\n                            </TableCell>\n                            <TableCell className=\" border border-gray-200\">\n                            <span className={`px-2 py-1 rounded-md ${getCategoryStyle(expense.category)}`}>\n                                {expense.category}\n                            </span>\n                            </TableCell>\n                            <TableCell className=\" border border-gray-200\">{formatCurrency(expense.trx_amount)}</TableCell>\n                            <TableCell className=\" border border-gray-200\">{formatCurrency(expense.trx_cost)}</TableCell>\n                            <TableCell className=\" border border-gray-200\">\n                            <span className={`px-2 py-1 rounded-md ${getMethodStyle(expense.payment_method)}`}>\n                                { expense.payment_method}\n                            </span>\n                            </TableCell>\n                            <TableCell className=\" border border-gray-200\">{formatDate(expense.paid_on)}</TableCell>\n                        </TableRow>\n                        ))}\n                    </TableBody>\n                    </Table>\n                </CardContent>\n            </Card>\n        </div>\n    )\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 700, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 706, "column": 0}, "map": {"version":3,"sources":["file:///home/louis/Documents/instant-demo/Documents/instant-demo/src/components/ui/chart.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item.dataKey || item.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 994, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1000, "column": 0}, "map": {"version":3,"sources":["file:///home/louis/Documents/instant-demo/Documents/instant-demo/src/ui-components/expense-chart.tsx"],"sourcesContent":["import { Card, CardContent, CardDescription, CardHeader } from \"@/components/ui/card\";\n// db imports\nimport { id, init, i, type InstaQLEntity } from \"@instantdb/react\";\n\n// chart imports \nimport { Bar, BarChart,CartesianGrid,Label,XAxis } from \"recharts\";\nimport { type ChartConfig, ChartContainer, ChartLegend, ChartLegendContent, ChartTooltip, ChartTooltipContent } from \"@/components/ui/chart\";\n\n// schema declaration \nconst schema = i.schema({\n  entities: {\n    expenses: i.entity({\n      trx_amount: i.number(),\n      trx_cost: i.number(),\n      category: i.string(),\n      payment_method: i.string(),\n      paid_on: i.number(),\n    })\n  }\n});\n\ntype Finance = InstaQLEntity<typeof schema, \"expenses\">;\n\nexport default function ExpenseChart({ expenses }: { expenses: Finance[] }) {\n\n    // Format date\n      const formatDate = (dateString: string | number) => {\n        return new Date(dateString).toLocaleDateString(\"en-US\", {\n          year: \"numeric\",\n          month: \"short\",\n          day: \"numeric\",\n        })\n      }\n    \n      const chartData = expenses.slice(-10).map(expense => ({\n        month: formatDate(expense.paid_on),\n        trx_amount: expense.trx_amount,\n        trx_cost: expense.trx_cost\n      }))\n    \n      const chartConfig = {\n        desktop: {\n          label: \"trx_amount\",\n          color: \"hsl(var(--chart-1))\",\n        },\n        mobile: {\n          label: \"trx_cost\",\n          color: \"hsl(var(--chart-2))\",\n        }\n      } satisfies ChartConfig\n\n    return (\n        <Card className=\" mt-4 mx-2\">\n            <CardHeader>\n                <CardDescription>Mar</CardDescription>\n            </CardHeader>\n            <CardContent>\n                <ChartContainer config={chartConfig}>\n                <BarChart accessibilityLayer data={chartData}>\n                    <CartesianGrid vertical={false} />\n                    <XAxis\n                    dataKey=\"month\"\n                    tickLine={false}\n                    tickMargin={10}\n                    axisLine={false}\n                    tickFormatter={(value) => value.slice(0, 3)}\n                    />\n                    <ChartTooltip content={<ChartTooltipContent hideLabel />} />\n                    <ChartLegend content={<ChartLegendContent />} />\n                    <Bar\n                    dataKey=\"trx_amount\"\n                    stackId=\"a\"\n                    fill=\"var(--color-trx_amount)\"\n                    radius={[0, 0, 4, 4]}\n                    />\n                    <Bar\n                    dataKey=\"trx_cost\"\n                    stackId=\"a\"\n                    fill=\"var(--color-trx_cost)\"\n                    radius={[4, 4, 0, 0]}\n                    />\n                </BarChart>\n                </ChartContainer>\n            </CardContent>\n        </Card>\n    )\n}"],"names":[],"mappings":";;;;AAAA;AACA,aAAa;AACb;AAIA;AAJA;AAEA,iBAAiB;AACjB;AAAA;AAAA;AAAA;;;;;;AAGA,sBAAsB;AACtB,MAAM,SAAS,+LAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACtB,UAAU;QACR,UAAU,+LAAA,CAAA,IAAC,CAAC,MAAM,CAAC;YACjB,YAAY,+LAAA,CAAA,IAAC,CAAC,MAAM;YACpB,UAAU,+LAAA,CAAA,IAAC,CAAC,MAAM;YAClB,UAAU,+LAAA,CAAA,IAAC,CAAC,MAAM;YAClB,gBAAgB,+LAAA,CAAA,IAAC,CAAC,MAAM;YACxB,SAAS,+LAAA,CAAA,IAAC,CAAC,MAAM;QACnB;IACF;AACF;AAIe,SAAS,aAAa,EAAE,QAAQ,EAA2B;IAEtE,cAAc;IACZ,MAAM,aAAa,CAAC;QAClB,OAAO,IAAI,KAAK,YAAY,kBAAkB,CAAC,SAAS;YACtD,MAAM;YACN,OAAO;YACP,KAAK;QACP;IACF;IAEA,MAAM,YAAY,SAAS,KAAK,CAAC,CAAC,IAAI,GAAG,CAAC,CAAA,UAAW,CAAC;YACpD,OAAO,WAAW,QAAQ,OAAO;YACjC,YAAY,QAAQ,UAAU;YAC9B,UAAU,QAAQ,QAAQ;QAC5B,CAAC;IAED,MAAM,cAAc;QAClB,SAAS;YACP,OAAO;YACP,OAAO;QACT;QACA,QAAQ;YACN,OAAO;YACP,OAAO;QACT;IACF;IAEF,qBACI,8QAAC,gKAAA,CAAA,OAAI;QAAC,WAAU;;0BACZ,8QAAC,gKAAA,CAAA,aAAU;0BACP,cAAA,8QAAC,gKAAA,CAAA,kBAAe;8BAAC;;;;;;;;;;;0BAErB,8QAAC,gKAAA,CAAA,cAAW;0BACR,cAAA,8QAAC,iKAAA,CAAA,iBAAc;oBAAC,QAAQ;8BACxB,cAAA,8QAAC,oLAAA,CAAA,WAAQ;wBAAC,kBAAkB;wBAAC,MAAM;;0CAC/B,8QAAC,6LAAA,CAAA,gBAAa;gCAAC,UAAU;;;;;;0CACzB,8QAAC,qLAAA,CAAA,QAAK;gCACN,SAAQ;gCACR,UAAU;gCACV,YAAY;gCACZ,UAAU;gCACV,eAAe,CAAC,QAAU,MAAM,KAAK,CAAC,GAAG;;;;;;0CAEzC,8QAAC,iKAAA,CAAA,eAAY;gCAAC,uBAAS,8QAAC,iKAAA,CAAA,sBAAmB;oCAAC,SAAS;;;;;;;;;;;0CACrD,8QAAC,iKAAA,CAAA,cAAW;gCAAC,uBAAS,8QAAC,iKAAA,CAAA,qBAAkB;;;;;;;;;;0CACzC,8QAAC,mLAAA,CAAA,MAAG;gCACJ,SAAQ;gCACR,SAAQ;gCACR,MAAK;gCACL,QAAQ;oCAAC;oCAAG;oCAAG;oCAAG;iCAAE;;;;;;0CAEpB,8QAAC,mLAAA,CAAA,MAAG;gCACJ,SAAQ;gCACR,SAAQ;gCACR,MAAK;gCACL,QAAQ;oCAAC;oCAAG;oCAAG;oCAAG;iCAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOxC"}},
    {"offset": {"line": 1173, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1179, "column": 0}, "map": {"version":3,"sources":["file:///home/louis/Documents/instant-demo/Documents/instant-demo/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogTrigger,\n  DialogClose,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AAIA;AAHA;AACA;AAJA;;;;;;AAQA,MAAM,SAAS,mMAAgB,IAAI;AAEnC,MAAM,gBAAgB,mMAAgB,OAAO;AAE7C,MAAM,eAAe,mMAAgB,MAAM;AAE3C,MAAM,cAAc,mMAAgB,KAAK;AAEzC,MAAM,8BAAgB,sOAAM,UAAU,CAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8QAAC,mMAAgB,OAAO;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,mJAAA,CAAA,KAAE,AAAD,EACV,2JACA;QAED,GAAG,KAAK;;;;;;AAGb,cAAc,WAAW,GAAG,mMAAgB,OAAO,CAAC,WAAW;AAE/D,MAAM,8BAAgB,sOAAM,UAAU,CAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8QAAC;;0BACC,8QAAC;;;;;0BACD,8QAAC,mMAAgB,OAAO;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,mJAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,8QAAC,mMAAgB,KAAK;wBAAC,WAAU;;0CAC/B,8QAAC,4NAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,8QAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,mMAAgB,OAAO,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8QAAC;QACC,WAAW,CAAA,GAAA,mJAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8QAAC;QACC,WAAW,CAAA,GAAA,mJAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,sOAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8QAAC,mMAAgB,KAAK;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mJAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,mMAAgB,KAAK,CAAC,WAAW;AAE3D,MAAM,kCAAoB,sOAAM,UAAU,CAGxC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8QAAC,mMAAgB,WAAW;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,mJAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG,mMAAgB,WAAW,CAAC,WAAW"}},
    {"offset": {"line": 1305, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1311, "column": 0}, "map": {"version":3,"sources":["file:///home/louis/Documents/instant-demo/Documents/instant-demo/src/app/page.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState } from \"react\";\n\n// react form \nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\n\nimport ExpenseTable from \"@/ui-components/table-list\";\nimport ExpenseChart from \"@/ui-components/expense-chart\";\n\n// icons \nimport { ChevronRight, Receipt, DollarSign, ListFilter, CreditCard} from \"lucide-react\";\n\n// shad components \nimport { Button } from \"@/components/ui/button\";\nimport { Dialog, DialogContent, DialogHeader, DialogTrigger, DialogTitle } from \"@/components/ui/dialog\";\n\n// db imports\nimport { id, init, i, type InstaQLEntity } from \"@instantdb/react\";\n\n// ID for app: finance-app\nconst APP_ID = \"e1067022-0a5c-472c-a97b-b3caf26ac02d\";\n\n// schema declaration \nconst schema = i.schema({\n  entities: {\n    expenses: i.entity({\n      trx_amount: i.number(),\n      trx_cost: i.number(),\n      category: i.string(),\n      payment_method: i.string(),\n      paid_on: i.number(),\n    })\n  }\n});\n\nconst formSchema = z.object({\n  trx_amount: z.string().min(1, { message: \"Transaction amount is required\" }),\n  trx_cost: z.string().min(1, { message: \"Transaction cost is required\" }),\n  category: z.string().min(1, { message: \"Please select a category\" }),\n  payment_method: z.string().min(1, { message: \"Please select a payment method\" }),\n})\n\ntype Finance = InstaQLEntity<typeof schema, \"expenses\">;\n\nconst db = init({ appId: APP_ID, schema })\n\nfunction App () {\n\n  // Read Data\n  const { isLoading, error, data } = db.useQuery({ expenses: {} });\n  if (isLoading) {\n    return;\n  }\n  if (error) {\n    return <div className=\"text-red-500 p-4\">Error: {error.message}</div>;\n  }\n  const { expenses } = data;\n\n  return (\n\n    <div className=\"flex justify-center items-center p-4\">\n  \n      <div className=\"w-full overflow-hidden rounded-3xl text-black shadow-xl\">\n\n        {/* Balance Section */}\n        <div className=\"px-4 pt-2\">\n          <div className=\"text-xs text-gray-400 flex items-center\">\n            Total Expenses <ChevronRight className=\"h-3 w-3 ml-1\" />\n          </div>\n          <div className=\"flex justify-between items-center mt-1 text-rose-500\">\n              <div className=\"text-3xl font-bold\">\n                KSh {expenses.map(expense => expense.trx_amount + expense.trx_cost).reduce((acc, curr) => acc + curr, 0).toFixed(2)}\n              </div>\n            <FormDialogue expenses={[]} />\n          </div>\n        </div>\n            \n\n        {/* Tabs */}\n        <div className=\"flex mt-4 px-4 border-b border-gray-800\">\n          <div className=\"pb-2 px-2 border-b-2 border-white font-medium text-sm\">All Exps</div>\n          <div className=\"pb-2 px-2 text-gray-400 text-sm\">All costs</div>\n        </div>\n\n        {/* Expense chart  */}\n        <ExpenseChart expenses={ expenses } />\n\n        {/* Expense list */}\n        <div className=\"px-2 pb-20\">\n          <ExpenseTable expenses={ expenses } />\n        </div>\n\n      </div>\n    </div>\n  )\n}\n\nfunction FormDialogue({ expenses }: { expenses: Finance[] }) {\n\n  const [open, setOpen] = useState(false)\n\n  return (\n    <Dialog open={open} onOpenChange={setOpen}>\n      <DialogTrigger asChild>\n        <Button variant=\"outline\" className=\"text-green-500 bg-green-100\">New EXP</Button>\n      </DialogTrigger>\n      <DialogContent className=\"sm:max-w-[425px]\">\n        <DialogHeader>\n          <DialogTitle>Expense</DialogTitle>\n        </DialogHeader>\n\n        <div className=\"grid gap-4 py-4\">\n          <ExpenseForm expenses={ expenses } onSuccess={() => setOpen(false)} />\n        </div>\n\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nexport default App;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1575, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}